<!DOCTYPE html>
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
      <title>Link Dashboard</title>
      <link rel="stylesheet" href="assets/css/mainPage.css" type="text/css" />
      <meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0" />
      <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"> </script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
   </head>
   <body>
      <section id="body" class="width">
        <div id="leftBar">
         <aside id="sidebar" class="column-left">
            <header>
               <img style='max-width: 100%; margin-left: 5%;' src="assets/LucidityWhite.png"></img>
            </header>
            <nav id="mainnav">
               <ul>
                  <li class="selected-item"><a href="/dashboard.ejs">Home</a></li>
                  <li><a href="/accounts.ejs">Accounts</a></li>
                  <li><a href="#">Bills</a></li>
                  <li><a href="#">Expenses</a></li>
                  <li><a href="#">Lucidity Pro</a></li>
               </ul>
            </nav>
         </aside>
        </div>
         <section id="content">
            <article>
               <h3>Welcome to your dashboard</h3>
               <!--<p>Mauris sit amet tortor in urna tincidunt aliquam. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestasMauris sit amet tortor in urna tincidunt aliquam. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas</p>-->
               <div style='display: block; margin: auto;'>
                  <canvas id="myChart" style="display: block;margin-left: auto;margin-right: auto;" width="800" height="400"></canvas>
                  <!--<canvas id="pieChart" width="400" height="400"></canvas>-->
               </div>
               <p>&nbsp;</p>
               <h4>Recent Transactions</h4>
               <div id="transactions-data"  style='font-size: 16px;'>
               </div>
            </article>
            <footer class="clear">
               <!--<p>&copy; 2018 sitename.</p>-->
            </footer>
         </section>
        <!-- <div class="clear"></div>-->
      </section>
   </body>
   <script>
      function account_id_to_name(in_id) {
          $.ajax({
              dataType: "json",
              url: 'assets/data.json',
              beforeSend: function(xhr){
                  if (xhr.overrideMimeType) {
                      xhr.overrideMimeType("application/json");
                  }
              },
              success: function(data, acct_id) {
                  /*console.log(data);*/
                  if (typeof data !== "undefined") {
                      data.accounts.forEach(function(acct, idx) {
                          /*console.log("acct.account_id " + acct.account_id);
                          console.log("in_id " + in_id);*/
                          if(acct.account_id === in_id){
                              console.log("AAAAAAAA" + acct.name);
                              return acct.name;
                          }
                    });

                  }
                }
            });
        }
   </script>
   <script src="assets/js/plaid_api_calls.js"></script>
   <script>

   //Almost all of whats below has been moved into that file
   get_user_transactions();

   
   /*var NUM_ACCTS = null;
   var accounts_array = [];

    function getNumAccts() {
        return new Promise(function(resolve, reject) {
            $.getJSON("api/user_data", function(data) {
                // Make sure the data contains the username as expected before using it
                if (data.hasOwnProperty('username')) {
                    console.log('Username: ' + data.username);
                    console.log('Num of accounts: ' + data.num_of_accounts);
                    NUM_ACCTS = data.num_of_accounts;
                    resolve(NUM_ACCTS);
                }
            });
        });
    }
    function getItems(i) {
        return new Promise(function(resolve, reject) {
            $.post('/item',{params: {var_i: i}}).success(
            function(success){
                console.log("returning");
                resolve(success);
            }).error(
            function(error){
                console.log(error);
            });
        });
    }
    function getTransactions(i){
        return new Promise(function(resolve, reject) {
            for (var i = 0; i < NUM_ACCTS; i++) {
                $.post('/transactions', {params: {var_i: i}}).success(
                    function(success){
                        console.log(success);
                        resolve(success);
                    }).error(
                    function(error){
                        console.log(error);
                    });
            }
        });
    }

    async function getTransactionData() {
        return new Promise(async function(resolve, reject) {
            console.log("Numaccts aaaa: " + NUM_ACCTS);
            accounts_array = [];
            for (var i = 0; i < NUM_ACCTS; i++) {
                var account = await getTransactions(i);
                accounts_array.push(account);
            }
            //console.log("array " + accounts_array);
            resolve(accounts_array);
        });
    }*/

/*    function addToTransactionsTable(data){
        html = '';
        for (var i = 0; i < data.transactions.length; i++) {
            var transaction = data.transactions[i];
            console.log(i);
            var account = "hold Account";
            for (var j = 0; j < data.accounts.length; j++) {
                if (data.accounts[j].account_id == transaction.account_id){
                    console.log(data.accounts[j].name);
                    account = data.accounts[j].name;
                    break;
                }
            }
            html += '<tr>';
            html += '<td>'+data.transactions[i].date+'</td>';
            html += '<td>'+data.transactions[i].name+'</td>';
            html += '<td>'+account+'</td>';
            html += '<td>$ '+data.transactions[i].amount+'</td>';
            html += '</tr>';
        }
    }*/

    /*function populate(dataArray){
        return new Promise(function(resolve, reject) {
            var data = dataArray[0];
            console.log("kkkkkk" + dataArray);
            console.log("LENGTH "+ dataArray.length);

            $('#transactions-data').slideUp(function() {
                var html = '';
                html += '<table>';
                html += '<tr><th>Date</th><th>Name</th><th>Account</th><th>Amount</th></tr>'
                console.log(" sdwefewef" + data.transactions.length);
                for (var j = 0; j < dataArray.length; j++) {
                    data = dataArray[j];
                    html = html + addToTransactionsTable(data);
                    console.log("added" + html);
                }

                html += '</table>';
                $(this).slideUp(function() {
                    $(this).html(html).slideDown();
                });
                resolve();
                });
        });
    }*/

    /*async function main() {
      var accts = await getNumAccts();
      var data = await getTransactionData();
      //var temp = await populate(data);
      populate(data);
      console.log("data" + data);
      console.log(accts);
    }

    main();*/

/*  console.log(data);
    $('#transactions-data').slideUp(function() {
      var html = '';
      html += '<table>';
      html += '<tr><th>Date</th><th>Name</th><th>Account</th><th>Amount</th></tr>'
      console.log(data.transactions.length);
      for (var i = 0; i < data.transactions.length; i++) {
          //console.log(data.transactions[i]);
          var transaction = data.transactions[i];
          console.log(i);
            var account = "hold Account";
            for (var j = 0; j < data.accounts.length; j++) {
                if (data.accounts[j].account_id == transaction.account_id){
                    console.log("AAAAAAAA" + data.accounts[j].name);
                    account = data.accounts[j].name;
                    break;
                }
            }
            html += '<tr>';
            html += '<td>'+data.transactions[i].date+'</td>';
            html += '<td>'+data.transactions[i].name+'</td>';
            html += '<td>'+account+'</td>';
            html += '<td>$ '+data.transactions[i].amount+'</td>';
            html += '</tr>';
    }
          html += '</table>';
          $(this).slideUp(function() {
            $(this).html(html).slideDown();
          });

    });*/
   </script>
   <script>
  // populateTransactions();



      var ctx = document.getElementById('myChart').getContext('2d');
      var chart = new Chart(ctx, {
          // The type of chart we want to create
          type: 'line',

          // The data for our dataset
          data: {
              labels: ["January", "February", "March", "April", "May", "June", "July"],
              datasets: [{
                  label: "Transactions",
                  backgroundColor: 'rgb(255, 99, 132)',
                  borderColor: 'rgb(255, 99, 132)',
                  data: [0, 10, 5, 2, 20, 30, 45],
              }]
          },

          // Configuration options go here
          options: {
              responsive: false
          }
      });
   </script>
</html>
